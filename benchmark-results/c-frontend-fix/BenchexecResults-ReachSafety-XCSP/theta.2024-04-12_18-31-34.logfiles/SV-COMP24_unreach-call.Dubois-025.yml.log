Theta/theta-start.sh sv-benchmarks/c/xcsp/Dubois-025.c --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --input sv-benchmarks/c/xcsp/Dubois-025.c --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/xcsp/Dubois-025.c as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: using int(1) as a string constant
WARNING: There are some used variables not present as declarations: [(var assume::cond (Bv 32)), (var call___VERIFIER_nondet_int_ret2 (Bv 32)), (var call___VERIFIER_nondet_int_ret5 (Bv 32)), (var call___VERIFIER_nondet_int_ret8 (Bv 32)), (var call___VERIFIER_nondet_int_ret11 (Bv 32)), (var call___VERIFIER_nondet_int_ret14 (Bv 32)), (var call___VERIFIER_nondet_int_ret17 (Bv 32)), (var call___VERIFIER_nondet_int_ret20 (Bv 32)), (var call___VERIFIER_nondet_int_ret23 (Bv 32)), (var call___VERIFIER_nondet_int_ret26 (Bv 32)), (var call___VERIFIER_nondet_int_ret29 (Bv 32)), (var call___VERIFIER_nondet_int_ret32 (Bv 32)), (var call___VERIFIER_nondet_int_ret35 (Bv 32)), (var call___VERIFIER_nondet_int_ret38 (Bv 32)), (var call___VERIFIER_nondet_int_ret41 (Bv 32)), (var call___VERIFIER_nondet_int_ret44 (Bv 32)), (var call___VERIFIER_nondet_int_ret47 (Bv 32)), (var call___VERIFIER_nondet_int_ret50 (Bv 32)), (var call___VERIFIER_nondet_int_ret53 (Bv 32)), (var call___VERIFIER_nondet_int_ret56 (Bv 32)), (var call___VERIFIER_nondet_int_ret59 (Bv 32)), (var call___VERIFIER_nondet_int_ret62 (Bv 32)), (var call___VERIFIER_nondet_int_ret65 (Bv 32)), (var call___VERIFIER_nondet_int_ret68 (Bv 32)), (var call___VERIFIER_nondet_int_ret71 (Bv 32)), (var call___VERIFIER_nondet_int_ret74 (Bv 32)), (var call___VERIFIER_nondet_int_ret77 (Bv 32)), (var call___VERIFIER_nondet_int_ret80 (Bv 32)), (var call___VERIFIER_nondet_int_ret83 (Bv 32)), (var call___VERIFIER_nondet_int_ret86 (Bv 32)), (var call___VERIFIER_nondet_int_ret89 (Bv 32)), (var call___VERIFIER_nondet_int_ret92 (Bv 32)), (var call___VERIFIER_nondet_int_ret95 (Bv 32)), (var call___VERIFIER_nondet_int_ret98 (Bv 32)), (var call___VERIFIER_nondet_int_ret101 (Bv 32)), (var call___VERIFIER_nondet_int_ret104 (Bv 32)), (var call___VERIFIER_nondet_int_ret107 (Bv 32)), (var call___VERIFIER_nondet_int_ret110 (Bv 32)), (var call___VERIFIER_nondet_int_ret113 (Bv 32)), (var call___VERIFIER_nondet_int_ret116 (Bv 32)), (var call___VERIFIER_nondet_int_ret119 (Bv 32)), (var call___VERIFIER_nondet_int_ret122 (Bv 32)), (var call___VERIFIER_nondet_int_ret125 (Bv 32)), (var call___VERIFIER_nondet_int_ret128 (Bv 32)), (var call___VERIFIER_nondet_int_ret131 (Bv 32)), (var call___VERIFIER_nondet_int_ret134 (Bv 32)), (var call___VERIFIER_nondet_int_ret137 (Bv 32)), (var call___VERIFIER_nondet_int_ret140 (Bv 32)), (var call___VERIFIER_nondet_int_ret143 (Bv 32)), (var call___VERIFIER_nondet_int_ret146 (Bv 32)), (var call___VERIFIER_nondet_int_ret149 (Bv 32)), (var call___VERIFIER_nondet_int_ret152 (Bv 32)), (var call___VERIFIER_nondet_int_ret155 (Bv 32)), (var call___VERIFIER_nondet_int_ret158 (Bv 32)), (var call___VERIFIER_nondet_int_ret161 (Bv 32)), (var call___VERIFIER_nondet_int_ret164 (Bv 32)), (var call___VERIFIER_nondet_int_ret167 (Bv 32)), (var call___VERIFIER_nondet_int_ret170 (Bv 32)), (var call___VERIFIER_nondet_int_ret173 (Bv 32)), (var call___VERIFIER_nondet_int_ret176 (Bv 32)), (var call___VERIFIER_nondet_int_ret179 (Bv 32)), (var call___VERIFIER_nondet_int_ret182 (Bv 32)), (var call___VERIFIER_nondet_int_ret185 (Bv 32)), (var call___VERIFIER_nondet_int_ret188 (Bv 32)), (var call___VERIFIER_nondet_int_ret191 (Bv 32)), (var call___VERIFIER_nondet_int_ret194 (Bv 32)), (var call___VERIFIER_nondet_int_ret197 (Bv 32)), (var call___VERIFIER_nondet_int_ret200 (Bv 32)), (var call___VERIFIER_nondet_int_ret203 (Bv 32)), (var call___VERIFIER_nondet_int_ret206 (Bv 32)), (var call___VERIFIER_nondet_int_ret209 (Bv 32)), (var call___VERIFIER_nondet_int_ret212 (Bv 32)), (var call___VERIFIER_nondet_int_ret215 (Bv 32)), (var call___VERIFIER_nondet_int_ret218 (Bv 32)), (var call___VERIFIER_nondet_int_ret221 (Bv 32)), (var call___VERIFIER_nondet_int_ret224 (Bv 32)), (var main::var0 (Bv 32)), (var main::var1 (Bv 32)), (var main::var2 (Bv 32)), (var main::var3 (Bv 32)), (var main::var4 (Bv 32)), (var main::var5 (Bv 32)), (var main::var6 (Bv 32)), (var main::var7 (Bv 32)), (var main::var8 (Bv 32)), (var main::var9 (Bv 32)), (var main::var10 (Bv 32)), (var main::var11 (Bv 32)), (var main::var12 (Bv 32)), (var main::var13 (Bv 32)), (var main::var14 (Bv 32)), (var main::var15 (Bv 32)), (var main::var16 (Bv 32)), (var main::var17 (Bv 32)), (var main::var18 (Bv 32)), (var main::var19 (Bv 32)), (var main::var20 (Bv 32)), (var main::var21 (Bv 32)), (var main::var22 (Bv 32)), (var main::var23 (Bv 32)), (var main::var24 (Bv 32)), (var main::var25 (Bv 32)), (var main::var26 (Bv 32)), (var main::var27 (Bv 32)), (var main::var28 (Bv 32)), (var main::var29 (Bv 32)), (var main::var30 (Bv 32)), (var main::var31 (Bv 32)), (var main::var32 (Bv 32)), (var main::var33 (Bv 32)), (var main::var34 (Bv 32)), (var main::var35 (Bv 32)), (var main::var36 (Bv 32)), (var main::var37 (Bv 32)), (var main::var38 (Bv 32)), (var main::var39 (Bv 32)), (var main::var40 (Bv 32)), (var main::var41 (Bv 32)), (var main::var42 (Bv 32)), (var main::var43 (Bv 32)), (var main::var44 (Bv 32)), (var main::var45 (Bv 32)), (var main::var46 (Bv 32)), (var main::var47 (Bv 32)), (var main::var48 (Bv 32)), (var main::var49 (Bv 32)), (var main::var50 (Bv 32)), (var main::var51 (Bv 32)), (var main::var52 (Bv 32)), (var main::var53 (Bv 32)), (var main::var54 (Bv 32)), (var main::var55 (Bv 32)), (var main::var56 (Bv 32)), (var main::var57 (Bv 32)), (var main::var58 (Bv 32)), (var main::var59 (Bv 32)), (var main::var60 (Bv 32)), (var main::var61 (Bv 32)), (var main::var62 (Bv 32)), (var main::var63 (Bv 32)), (var main::var64 (Bv 32)), (var main::var65 (Bv 32)), (var main::var66 (Bv 32)), (var main::var67 (Bv 32)), (var main::var68 (Bv 32)), (var main::var69 (Bv 32)), (var main::var70 (Bv 32)), (var main::var71 (Bv 32)), (var main::var72 (Bv 32)), (var main::var73 (Bv 32)), (var main::var74 (Bv 32))]
WARNING: There are some used variables not present as declarations: [(var call___assert_fail_ret0 (Bv 1)), (var call___VERIFIER_nondet_int_ret2 (Bv 32)), (var call___VERIFIER_nondet_int_ret5 (Bv 32)), (var call___VERIFIER_nondet_int_ret8 (Bv 32)), (var call___VERIFIER_nondet_int_ret11 (Bv 32)), (var call___VERIFIER_nondet_int_ret14 (Bv 32)), (var call___VERIFIER_nondet_int_ret17 (Bv 32)), (var call___VERIFIER_nondet_int_ret20 (Bv 32)), (var call___VERIFIER_nondet_int_ret23 (Bv 32)), (var call___VERIFIER_nondet_int_ret26 (Bv 32)), (var call___VERIFIER_nondet_int_ret29 (Bv 32)), (var call___VERIFIER_nondet_int_ret32 (Bv 32)), (var call___VERIFIER_nondet_int_ret35 (Bv 32)), (var call___VERIFIER_nondet_int_ret38 (Bv 32)), (var call___VERIFIER_nondet_int_ret41 (Bv 32)), (var call___VERIFIER_nondet_int_ret44 (Bv 32)), (var call___VERIFIER_nondet_int_ret47 (Bv 32)), (var call___VERIFIER_nondet_int_ret50 (Bv 32)), (var call___VERIFIER_nondet_int_ret53 (Bv 32)), (var call___VERIFIER_nondet_int_ret56 (Bv 32)), (var call___VERIFIER_nondet_int_ret59 (Bv 32)), (var call___VERIFIER_nondet_int_ret62 (Bv 32)), (var call___VERIFIER_nondet_int_ret65 (Bv 32)), (var call___VERIFIER_nondet_int_ret68 (Bv 32)), (var call___VERIFIER_nondet_int_ret71 (Bv 32)), (var call___VERIFIER_nondet_int_ret74 (Bv 32)), (var call___VERIFIER_nondet_int_ret77 (Bv 32)), (var call___VERIFIER_nondet_int_ret80 (Bv 32)), (var call___VERIFIER_nondet_int_ret83 (Bv 32)), (var call___VERIFIER_nondet_int_ret86 (Bv 32)), (var call___VERIFIER_nondet_int_ret89 (Bv 32)), (var call___VERIFIER_nondet_int_ret92 (Bv 32)), (var call___VERIFIER_nondet_int_ret95 (Bv 32)), (var call___VERIFIER_nondet_int_ret98 (Bv 32)), (var call___VERIFIER_nondet_int_ret101 (Bv 32)), (var call___VERIFIER_nondet_int_ret104 (Bv 32)), (var call___VERIFIER_nondet_int_ret107 (Bv 32)), (var call___VERIFIER_nondet_int_ret110 (Bv 32)), (var call___VERIFIER_nondet_int_ret113 (Bv 32)), (var call___VERIFIER_nondet_int_ret116 (Bv 32)), (var call___VERIFIER_nondet_int_ret119 (Bv 32)), (var call___VERIFIER_nondet_int_ret122 (Bv 32)), (var call___VERIFIER_nondet_int_ret125 (Bv 32)), (var call___VERIFIER_nondet_int_ret128 (Bv 32)), (var call___VERIFIER_nondet_int_ret131 (Bv 32)), (var call___VERIFIER_nondet_int_ret134 (Bv 32)), (var call___VERIFIER_nondet_int_ret137 (Bv 32)), (var call___VERIFIER_nondet_int_ret140 (Bv 32)), (var call___VERIFIER_nondet_int_ret143 (Bv 32)), (var call___VERIFIER_nondet_int_ret146 (Bv 32)), (var call___VERIFIER_nondet_int_ret149 (Bv 32)), (var call___VERIFIER_nondet_int_ret152 (Bv 32)), (var call___VERIFIER_nondet_int_ret155 (Bv 32)), (var call___VERIFIER_nondet_int_ret158 (Bv 32)), (var call___VERIFIER_nondet_int_ret161 (Bv 32)), (var call___VERIFIER_nondet_int_ret164 (Bv 32)), (var call___VERIFIER_nondet_int_ret167 (Bv 32)), (var call___VERIFIER_nondet_int_ret170 (Bv 32)), (var call___VERIFIER_nondet_int_ret173 (Bv 32)), (var call___VERIFIER_nondet_int_ret176 (Bv 32)), (var call___VERIFIER_nondet_int_ret179 (Bv 32)), (var call___VERIFIER_nondet_int_ret182 (Bv 32)), (var call___VERIFIER_nondet_int_ret185 (Bv 32)), (var call___VERIFIER_nondet_int_ret188 (Bv 32)), (var call___VERIFIER_nondet_int_ret191 (Bv 32)), (var call___VERIFIER_nondet_int_ret194 (Bv 32)), (var call___VERIFIER_nondet_int_ret197 (Bv 32)), (var call___VERIFIER_nondet_int_ret200 (Bv 32)), (var call___VERIFIER_nondet_int_ret203 (Bv 32)), (var call___VERIFIER_nondet_int_ret206 (Bv 32)), (var call___VERIFIER_nondet_int_ret209 (Bv 32)), (var call___VERIFIER_nondet_int_ret212 (Bv 32)), (var call___VERIFIER_nondet_int_ret215 (Bv 32)), (var call___VERIFIER_nondet_int_ret218 (Bv 32)), (var call___VERIFIER_nondet_int_ret221 (Bv 32)), (var call___VERIFIER_nondet_int_ret224 (Bv 32)), (var main::var0 (Bv 32)), (var main::var1 (Bv 32)), (var main::var2 (Bv 32)), (var main::var3 (Bv 32)), (var main::var4 (Bv 32)), (var main::var5 (Bv 32)), (var main::var6 (Bv 32)), (var main::var7 (Bv 32)), (var main::var8 (Bv 32)), (var main::var9 (Bv 32)), (var main::var10 (Bv 32)), (var main::var11 (Bv 32)), (var main::var12 (Bv 32)), (var main::var13 (Bv 32)), (var main::var14 (Bv 32)), (var main::var15 (Bv 32)), (var main::var16 (Bv 32)), (var main::var17 (Bv 32)), (var main::var18 (Bv 32)), (var main::var19 (Bv 32)), (var main::var20 (Bv 32)), (var main::var21 (Bv 32)), (var main::var22 (Bv 32)), (var main::var23 (Bv 32)), (var main::var24 (Bv 32)), (var main::var25 (Bv 32)), (var main::var26 (Bv 32)), (var main::var27 (Bv 32)), (var main::var28 (Bv 32)), (var main::var29 (Bv 32)), (var main::var30 (Bv 32)), (var main::var31 (Bv 32)), (var main::var32 (Bv 32)), (var main::var33 (Bv 32)), (var main::var34 (Bv 32)), (var main::var35 (Bv 32)), (var main::var36 (Bv 32)), (var main::var37 (Bv 32)), (var main::var38 (Bv 32)), (var main::var39 (Bv 32)), (var main::var40 (Bv 32)), (var main::var41 (Bv 32)), (var main::var42 (Bv 32)), (var main::var43 (Bv 32)), (var main::var44 (Bv 32)), (var main::var45 (Bv 32)), (var main::var46 (Bv 32)), (var main::var47 (Bv 32)), (var main::var48 (Bv 32)), (var main::var49 (Bv 32)), (var main::var50 (Bv 32)), (var main::var51 (Bv 32)), (var main::var52 (Bv 32)), (var main::var53 (Bv 32)), (var main::var54 (Bv 32)), (var main::var55 (Bv 32)), (var main::var56 (Bv 32)), (var main::var57 (Bv 32)), (var main::var58 (Bv 32)), (var main::var59 (Bv 32)), (var main::var60 (Bv 32)), (var main::var61 (Bv 32)), (var main::var62 (Bv 32)), (var main::var63 (Bv 32)), (var main::var64 (Bv 32)), (var main::var65 (Bv 32)), (var main::var66 (Bv 32)), (var main::var67 (Bv 32)), (var main::var68 (Bv 32)), (var main::var69 (Bv 32)), (var main::var70 (Bv 32)), (var main::var71 (Bv 32)), (var main::var72 (Bv 32)), (var main::var73 (Bv 32)), (var main::var74 (Bv 32))]
WARNING: There are some used variables not present as declarations: [(var call___assert_fail_ret0 (Bv 1))]
Arithmetic: [BITWISE]
Frontend finished:   (in 709 ms)
ParsingResult Success
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio BITWISE
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=100000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=NOPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=cvc5:1.0.8, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=ERR), refinerConfig=CegarRefinerConfig(refinementSolver=cvc5:1.0.8, validateRefinementSolver=false, refinement=NWT_IT_WP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist XcfaDistToErrComparator)) (XcfaSingleExprTraceRefiner ExprTraceNewtonChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 403 nodes, 1 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 202
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 2
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 403 nodes, 1 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: Process failed! (hu.bme.mit.theta.analysis.runtimemonitor.CexMonitor.throwNotSolvable(CexMonitor.kt:62), hu.bme.mit.theta.common.exception.NotSolvableException: Task is not solvable with this configuration!)
ErrorCodeException(code=220)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda-0(ConfigToPortfolio.kt:71)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:28)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=220)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=0, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=NOPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=mathsat:5.6.10, validateAbstractionSolver=false, domain=PRED_CART, maxEnum=1, search=ERR), refinerConfig=CegarRefinerConfig(refinementSolver=mathsat:5.6.10, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist XcfaDistToErrComparator)) (XcfaSingleExprTraceRefiner ExprTraceSeqItpChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 403 nodes, 1 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 202
