Theta/theta-start.sh sv-benchmarks/c/xcsp/AllInterval-014.c --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --input sv-benchmarks/c/xcsp/AllInterval-014.c --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/xcsp/AllInterval-014.c as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: using int(1) as a string constant
WARNING: There are some used variables not present as declarations: [(var assume::cond Int), (var main::cond0 Int), (var main::N Int), (var main::var0 Int), (var call___VERIFIER_nondet_int_ret2 Int), (var main::var1 Int), (var call___VERIFIER_nondet_int_ret5 Int), (var main::var2 Int), (var call___VERIFIER_nondet_int_ret8 Int), (var main::var3 Int), (var call___VERIFIER_nondet_int_ret11 Int), (var main::var4 Int), (var call___VERIFIER_nondet_int_ret14 Int), (var main::var5 Int), (var call___VERIFIER_nondet_int_ret17 Int), (var main::var6 Int), (var call___VERIFIER_nondet_int_ret20 Int), (var main::var7 Int), (var call___VERIFIER_nondet_int_ret23 Int), (var main::var8 Int), (var call___VERIFIER_nondet_int_ret26 Int), (var main::var9 Int), (var call___VERIFIER_nondet_int_ret29 Int), (var main::var10 Int), (var call___VERIFIER_nondet_int_ret32 Int), (var main::var11 Int), (var call___VERIFIER_nondet_int_ret35 Int), (var main::var12 Int), (var call___VERIFIER_nondet_int_ret38 Int), (var main::var13 Int), (var call___VERIFIER_nondet_int_ret41 Int), (var main::var14 Int), (var call___VERIFIER_nondet_int_ret44 Int), (var main::var15 Int), (var call___VERIFIER_nondet_int_ret47 Int), (var main::var16 Int), (var call___VERIFIER_nondet_int_ret50 Int), (var main::var17 Int), (var call___VERIFIER_nondet_int_ret53 Int), (var main::var18 Int), (var call___VERIFIER_nondet_int_ret56 Int), (var main::var19 Int), (var call___VERIFIER_nondet_int_ret59 Int), (var main::var20 Int), (var call___VERIFIER_nondet_int_ret62 Int), (var main::var21 Int), (var call___VERIFIER_nondet_int_ret65 Int), (var main::var22 Int), (var call___VERIFIER_nondet_int_ret68 Int), (var main::var23 Int), (var call___VERIFIER_nondet_int_ret71 Int), (var main::var24 Int), (var call___VERIFIER_nondet_int_ret74 Int), (var main::var25 Int), (var call___VERIFIER_nondet_int_ret77 Int), (var main::var26 Int), (var call___VERIFIER_nondet_int_ret80 Int), (var main::var_for_abs Int)]
WARNING: There are some used variables not present as declarations: [(var call___assert_fail_ret0 Int), (var main::cond0 Int), (var main::N Int), (var main::var0 Int), (var call___VERIFIER_nondet_int_ret2 Int), (var main::var1 Int), (var call___VERIFIER_nondet_int_ret5 Int), (var main::var2 Int), (var call___VERIFIER_nondet_int_ret8 Int), (var main::var3 Int), (var call___VERIFIER_nondet_int_ret11 Int), (var main::var4 Int), (var call___VERIFIER_nondet_int_ret14 Int), (var main::var5 Int), (var call___VERIFIER_nondet_int_ret17 Int), (var main::var6 Int), (var call___VERIFIER_nondet_int_ret20 Int), (var main::var7 Int), (var call___VERIFIER_nondet_int_ret23 Int), (var main::var8 Int), (var call___VERIFIER_nondet_int_ret26 Int), (var main::var9 Int), (var call___VERIFIER_nondet_int_ret29 Int), (var main::var10 Int), (var call___VERIFIER_nondet_int_ret32 Int), (var main::var11 Int), (var call___VERIFIER_nondet_int_ret35 Int), (var main::var12 Int), (var call___VERIFIER_nondet_int_ret38 Int), (var main::var13 Int), (var call___VERIFIER_nondet_int_ret41 Int), (var main::var14 Int), (var call___VERIFIER_nondet_int_ret44 Int), (var main::var15 Int), (var call___VERIFIER_nondet_int_ret47 Int), (var main::var16 Int), (var call___VERIFIER_nondet_int_ret50 Int), (var main::var17 Int), (var call___VERIFIER_nondet_int_ret53 Int), (var main::var18 Int), (var call___VERIFIER_nondet_int_ret56 Int), (var main::var19 Int), (var call___VERIFIER_nondet_int_ret59 Int), (var main::var20 Int), (var call___VERIFIER_nondet_int_ret62 Int), (var main::var21 Int), (var call___VERIFIER_nondet_int_ret65 Int), (var main::var22 Int), (var call___VERIFIER_nondet_int_ret68 Int), (var main::var23 Int), (var call___VERIFIER_nondet_int_ret71 Int), (var main::var24 Int), (var call___VERIFIER_nondet_int_ret74 Int), (var main::var25 Int), (var call___VERIFIER_nondet_int_ret77 Int), (var main::var26 Int), (var call___VERIFIER_nondet_int_ret80 Int), (var main::var_for_abs Int)]
WARNING: There are some used variables not present as declarations: [(var call___assert_fail_ret0 Int)]
Arithmetic: [NONLIN_INT]
Frontend finished:   (in 646 ms)
ParsingResult Success
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio NONLIN_INT
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=100000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=NOPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=ERR), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=NWT_IT_WP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist XcfaDistToErrComparator)) (XcfaSingleExprTraceRefiner ExprTraceNewtonChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 475 nodes, 1 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 238
ErrorCodeException(code=201)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:103)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda-0(ConfigToPortfolio.kt:71)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:28)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=201)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=100000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=NOPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=ERR), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist XcfaDistToErrComparator)) (XcfaSingleExprTraceRefiner ExprTraceSeqItpChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 475 nodes, 1 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 238
