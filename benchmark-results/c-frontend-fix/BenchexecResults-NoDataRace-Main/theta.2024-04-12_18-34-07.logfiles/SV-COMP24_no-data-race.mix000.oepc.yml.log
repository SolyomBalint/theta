Theta/theta-start.sh sv-benchmarks/c/pthread-wmm/mix000.oepc.i --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/no-data-race.prp


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/no-data-race.prp --input sv-benchmarks/c/pthread-wmm/mix000.oepc.i --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/pthread-wmm/mix000.oepc.i as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: CompoundDefinitions are not yet implemented!
WARNING: self-embedded structs! Using long as a placeholder
WARNING: Unknown simple type union pthread_attr_t
WARNING: enums are not yet supported! Using int instead.
WARNING: There are some used variables not present as declarations: [(var __VERIFIER_assert::expression Int), (var call___VERIFIER_nondet_bool_ret7 Int), (var call___VERIFIER_nondet_bool_ret8 Int), (var call___VERIFIER_nondet_bool_ret21 Int), (var call___VERIFIER_nondet_bool_ret22 Int), (var main::t0 Int), (var main::t1 Int)]
WARNING: There are some used variables not present as declarations: [(var assume_abort_if_not::cond Int), (var __VERIFIER_assert::expression Int), (var call___VERIFIER_nondet_bool_ret7 Int), (var call___VERIFIER_nondet_bool_ret8 Int), (var call___VERIFIER_nondet_bool_ret21 Int), (var call___VERIFIER_nondet_bool_ret22 Int), (var main::t0 Int), (var main::t1 Int)]
WARNING: There are some used variables not present as declarations: [(var assume_abort_if_not::cond Int), (var call___VERIFIER_nondet_bool_ret7 Int), (var call___VERIFIER_nondet_bool_ret8 Int), (var call___VERIFIER_nondet_bool_ret21 Int), (var call___VERIFIER_nondet_bool_ret22 Int), (var main::t0 Int), (var main::t1 Int)]
WARNING: There are some used variables not present as declarations: [(var assume_abort_if_not::cond Int), (var call___VERIFIER_nondet_bool_ret21 Int), (var call___VERIFIER_nondet_bool_ret22 Int), (var main::t0 Int), (var main::t1 Int)]
WARNING: There are some used variables not present as declarations: [(var assume_abort_if_not::cond Int), (var __VERIFIER_assert::expression Int), (var call___VERIFIER_nondet_bool_ret7 Int), (var main::t0 Int), (var main::t1 Int)]
WARNING: There are some used variables not present as declarations: [(var call___VERIFIER_nondet_bool_ret7 Int), (var call___VERIFIER_nondet_bool_ret21 Int)]
Arithmetic: []
Frontend finished:   (in 800 ms)
ParsingResult Success
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio MULTITHREAD
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: line 1:0 no viable alternative at input 'default'
server: Could not parse (var main::t1 Int) = start P1(0, (array (default 0)))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@76a4d6c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@77c2494c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@f5958c9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@233795b6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@3eb738bb, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@5bda8e08, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@1e800aaa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@185a6e9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@6f03482, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@9d5509a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@179ece50, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@3b0090a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@3cd3e762, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@1fa121e2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@62ddbd7e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@74e52ef6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@6ed3ccb2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@1a677343, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@15de0b3c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@489115ef, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@3857f613, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@198b6731, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@7c6908d7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@65b3f4a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@2a266d09, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@7068f7ca, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@38548b19, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@41aaedaa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@a7f0ab6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@41f35f7c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@42c2f48c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@30814f43, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@1fde4f40, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@49cf9028, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@7ce9e05a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@4992613f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fb39c097a48@6fd5717c) }
server: env: Env( (Frame __unbuffered_cnt <- (var __unbuffered_cnt Int) __unbuffered_p0_EAX <- (var __unbuffered_p0_EAX Int) __unbuffered_p0_EBX <- (var __unbuffered_p0_EBX Int) __unbuffered_p1_EAX <- (var __unbuffered_p1_EAX Int) __unbuffered_p1_EBX <- (var __unbuffered_p1_EBX Int) main$tmp_guard0 <- (var main$tmp_guard0 Int) main$tmp_guard1 <- (var main$tmp_guard1 Int) x <- (var x Int) y <- (var y Int) y$flush_delayed <- (var y$flush_delayed Int) y$mem_tmp <- (var y$mem_tmp Int) y$r_buff0_thd0 <- (var y$r_buff0_thd0 Int) y$r_buff0_thd1 <- (var y$r_buff0_thd1 Int) y$r_buff0_thd2 <- (var y$r_buff0_thd2 Int) y$r_buff1_thd0 <- (var y$r_buff1_thd0 Int) y$r_buff1_thd1 <- (var y$r_buff1_thd1 Int) y$r_buff1_thd2 <- (var y$r_buff1_thd2 Int) y$w_buff0 <- (var y$w_buff0 Int) y$w_buff0_used <- (var y$w_buff0_used Int) y$w_buff1 <- (var y$w_buff1 Int) y$w_buff1_used <- (var y$w_buff1_used Int) weak$$choice0 <- (var weak$$choice0 Int) weak$$choice2 <- (var weak$$choice2 Int) assume_abort_if_not_ret <- (var assume_abort_if_not_ret Int) assume_abort_if_not::cond <- (var assume_abort_if_not::cond Int) reach_error_ret <- (var reach_error_ret Int) __VERIFIER_assert_ret <- (var __VERIFIER_assert_ret Int) __VERIFIER_assert::expression <- (var __VERIFIER_assert::expression Int) P0_ret <- (var P0_ret (Array ([Int] -> Int))) P0::arg <- (var P0::arg (Array ([Int] -> Int))) call___VERIFIER_nondet_bool_ret7 <- (var call___VERIFIER_nondet_bool_ret7 Int) P1_ret <- (var P1_ret (Array ([Int] -> Int))) P1::arg <- (var P1::arg (Array ([Int] -> Int))) call___VERIFIER_nondet_bool_ret21 <- (var call___VERIFIER_nondet_bool_ret21 Int) main_ret <- (var main_ret Int) main::t0 <- (var main::t0 Int) main::t1 <- (var main::t1 Int)) )
server: type: StartLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:180)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:101)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:30)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:54)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.funcLitExpr(ExprParser.java:347)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.expr(ExprParser.java:191)
server: 	at hu.bme.mit.theta.grammar.dsl.expr.ExpressionWrapper.<init>(ExprParser.kt:88)
server: 	at hu.bme.mit.theta.xcfa.model.StartLabel$Companion.fromString(XcfaLabel.kt:93)
server: 	... 28 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.funcLitExpr(ExprParser.java:319)
server: 	... 31 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda-0(ConfigToPortfolio.kt:71)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:28)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=300000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=z3:4.12.2, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS), refinerConfig=CegarRefinerConfig(refinementSolver=z3:4.12.2, validateRefinementSolver=false, refinement=NWT_IT_WP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: line 1:0 no viable alternative at input 'default'
server: Could not parse (var main::t1 Int) = start P1(0, (array (default 0)))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@76a4d6c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@77c2494c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@f5958c9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@233795b6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@3eb738bb, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@5bda8e08, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@1e800aaa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@185a6e9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@6f03482, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@9d5509a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@179ece50, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@3b0090a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@3cd3e762, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@1fa121e2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@62ddbd7e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@74e52ef6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@6ed3ccb2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@1a677343, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@15de0b3c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@489115ef, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@3857f613, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@198b6731, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@7c6908d7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@65b3f4a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@2a266d09, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@7068f7ca, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@38548b19, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@41aaedaa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@a7f0ab6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@41f35f7c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@42c2f48c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@30814f43, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@1fde4f40, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@49cf9028, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@7ce9e05a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@4992613f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fc854097a48@6fd5717c) }
server: env: Env( (Frame __unbuffered_cnt <- (var __unbuffered_cnt Int) __unbuffered_p0_EAX <- (var __unbuffered_p0_EAX Int) __unbuffered_p0_EBX <- (var __unbuffered_p0_EBX Int) __unbuffered_p1_EAX <- (var __unbuffered_p1_EAX Int) __unbuffered_p1_EBX <- (var __unbuffered_p1_EBX Int) main$tmp_guard0 <- (var main$tmp_guard0 Int) main$tmp_guard1 <- (var main$tmp_guard1 Int) x <- (var x Int) y <- (var y Int) y$flush_delayed <- (var y$flush_delayed Int) y$mem_tmp <- (var y$mem_tmp Int) y$r_buff0_thd0 <- (var y$r_buff0_thd0 Int) y$r_buff0_thd1 <- (var y$r_buff0_thd1 Int) y$r_buff0_thd2 <- (var y$r_buff0_thd2 Int) y$r_buff1_thd0 <- (var y$r_buff1_thd0 Int) y$r_buff1_thd1 <- (var y$r_buff1_thd1 Int) y$r_buff1_thd2 <- (var y$r_buff1_thd2 Int) y$w_buff0 <- (var y$w_buff0 Int) y$w_buff0_used <- (var y$w_buff0_used Int) y$w_buff1 <- (var y$w_buff1 Int) y$w_buff1_used <- (var y$w_buff1_used Int) weak$$choice0 <- (var weak$$choice0 Int) weak$$choice2 <- (var weak$$choice2 Int) assume_abort_if_not_ret <- (var assume_abort_if_not_ret Int) assume_abort_if_not::cond <- (var assume_abort_if_not::cond Int) reach_error_ret <- (var reach_error_ret Int) __VERIFIER_assert_ret <- (var __VERIFIER_assert_ret Int) __VERIFIER_assert::expression <- (var __VERIFIER_assert::expression Int) P0_ret <- (var P0_ret (Array ([Int] -> Int))) P0::arg <- (var P0::arg (Array ([Int] -> Int))) call___VERIFIER_nondet_bool_ret7 <- (var call___VERIFIER_nondet_bool_ret7 Int) P1_ret <- (var P1_ret (Array ([Int] -> Int))) P1::arg <- (var P1::arg (Array ([Int] -> Int))) call___VERIFIER_nondet_bool_ret21 <- (var call___VERIFIER_nondet_bool_ret21 Int) main_ret <- (var main_ret Int) main::t0 <- (var main::t0 Int) main::t1 <- (var main::t1 Int)) )
server: type: StartLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:180)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:101)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:30)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:54)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.funcLitExpr(ExprParser.java:347)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.expr(ExprParser.java:191)
server: 	at hu.bme.mit.theta.grammar.dsl.expr.ExpressionWrapper.<init>(ExprParser.kt:88)
server: 	at hu.bme.mit.theta.xcfa.model.StartLabel$Companion.fromString(XcfaLabel.kt:93)
server: 	... 28 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.funcLitExpr(ExprParser.java:319)
server: 	... 31 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda-0(ConfigToPortfolio.kt:71)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:28)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=0, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=PRED_CART, maxEnum=1, search=DFS), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: line 1:0 no viable alternative at input 'default'
server: Could not parse (var main::t1 Int) = start P1(0, (array (default 0)))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@76a4d6c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@77c2494c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@f5958c9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@233795b6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@3eb738bb, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@5bda8e08, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@1e800aaa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@185a6e9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@6f03482, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@9d5509a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@179ece50, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@3b0090a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@3cd3e762, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@1fa121e2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@62ddbd7e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@74e52ef6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@6ed3ccb2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@1a677343, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@15de0b3c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@489115ef, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@3857f613, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@198b6731, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@7c6908d7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@65b3f4a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@2a266d09, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@7068f7ca, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@38548b19, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@41aaedaa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@a7f0ab6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@41f35f7c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@42c2f48c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@30814f43, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@1fde4f40, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@49cf9028, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@7ce9e05a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@4992613f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fa390097a48@6fd5717c) }
server: env: Env( (Frame __unbuffered_cnt <- (var __unbuffered_cnt Int) __unbuffered_p0_EAX <- (var __unbuffered_p0_EAX Int) __unbuffered_p0_EBX <- (var __unbuffered_p0_EBX Int) __unbuffered_p1_EAX <- (var __unbuffered_p1_EAX Int) __unbuffered_p1_EBX <- (var __unbuffered_p1_EBX Int) main$tmp_guard0 <- (var main$tmp_guard0 Int) main$tmp_guard1 <- (var main$tmp_guard1 Int) x <- (var x Int) y <- (var y Int) y$flush_delayed <- (var y$flush_delayed Int) y$mem_tmp <- (var y$mem_tmp Int) y$r_buff0_thd0 <- (var y$r_buff0_thd0 Int) y$r_buff0_thd1 <- (var y$r_buff0_thd1 Int) y$r_buff0_thd2 <- (var y$r_buff0_thd2 Int) y$r_buff1_thd0 <- (var y$r_buff1_thd0 Int) y$r_buff1_thd1 <- (var y$r_buff1_thd1 Int) y$r_buff1_thd2 <- (var y$r_buff1_thd2 Int) y$w_buff0 <- (var y$w_buff0 Int) y$w_buff0_used <- (var y$w_buff0_used Int) y$w_buff1 <- (var y$w_buff1 Int) y$w_buff1_used <- (var y$w_buff1_used Int) weak$$choice0 <- (var weak$$choice0 Int) weak$$choice2 <- (var weak$$choice2 Int) assume_abort_if_not_ret <- (var assume_abort_if_not_ret Int) assume_abort_if_not::cond <- (var assume_abort_if_not::cond Int) reach_error_ret <- (var reach_error_ret Int) __VERIFIER_assert_ret <- (var __VERIFIER_assert_ret Int) __VERIFIER_assert::expression <- (var __VERIFIER_assert::expression Int) P0_ret <- (var P0_ret (Array ([Int] -> Int))) P0::arg <- (var P0::arg (Array ([Int] -> Int))) call___VERIFIER_nondet_bool_ret7 <- (var call___VERIFIER_nondet_bool_ret7 Int) P1_ret <- (var P1_ret (Array ([Int] -> Int))) P1::arg <- (var P1::arg (Array ([Int] -> Int))) call___VERIFIER_nondet_bool_ret21 <- (var call___VERIFIER_nondet_bool_ret21 Int) main_ret <- (var main_ret Int) main::t0 <- (var main::t0 Int) main::t1 <- (var main::t1 Int)) )
server: type: StartLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:180)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:101)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:30)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:54)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.funcLitExpr(ExprParser.java:347)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.expr(ExprParser.java:191)
server: 	at hu.bme.mit.theta.grammar.dsl.expr.ExpressionWrapper.<init>(ExprParser.kt:88)
server: 	at hu.bme.mit.theta.xcfa.model.StartLabel$Companion.fromString(XcfaLabel.kt:93)
server: 	... 28 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.ExprParser.funcLitExpr(ExprParser.java:319)
server: 	... 31 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda-0(ConfigToPortfolio.kt:71)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:28)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:192)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:191)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:72)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Could not handle trigger ErrorCodeException(code=1) (Available triggers: [SolverError])
Caught exception: ErrorCodeException(code=1)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=false, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist (Combinator TargetFirst (Combinator (Inverter DepthOrder) CreationOrder)))) (XcfaSingleExprTraceRefiner ExprTraceSeqItpChecker XcfaPrecRefiner))
Iteration 1
| Checking abstraction...
|  |  (Re)initializing ARG...done
|  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
|  |  Building ARG...done
|  |  Finished ARG: 667 nodes, 0 incomplete, 0 unsafe
| Checking abstraction done, result: (AbstractorResult Safe)
(SafetyResult Safe)
AlgorithmTimeMs: 915
Iterations: 1

Backend finished (in 1003 ms)
(SafetyResult Safe)
Config XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, loopUnroll=1000, forceUnroll=-1, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=false, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false)) succeeded in 4582 ms
Backend finished (in 4643 ms)
(SafetyResult Safe)
